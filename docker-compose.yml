version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: shopify_oauth
      POSTGRES_USER: shopify_user
      POSTGRES_PASSWORD: secure_password_change_in_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shopify_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for rate limiting (optional)
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Shopify OAuth Application
  shopify-oauth:
    build: .
    environment:
      # Shopify Configuration
      SHOP: ${SHOP}
      API_KEY: ${API_KEY}
      API_SECRET: ${API_SECRET}
      REDIRECT_URI: ${REDIRECT_URI}
      
      # Server Configuration
      PORT: 3000
      HOST: 0.0.0.0
      ENVIRONMENT: production
      
      # Database Configuration
      DATABASE_URL: postgresql://shopify_user:secure_password_change_in_production@postgres:5432/shopify_oauth
      DB_MAX_CONNECTIONS: 10
      DB_MIN_CONNECTIONS: 5
      
      # Security
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      JWT_SECRET: ${JWT_SECRET}
      
      # Rate Limiting
      RATE_LIMIT_OAUTH_PER_MINUTE: 10
      RATE_LIMIT_API_PER_MINUTE: 60
      RATE_LIMIT_GENERAL_PER_MINUTE: 100
      RATE_LIMIT_BURST_SIZE: 5
      
      # Logging
      RUST_LOG: info
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (for production HTTPS)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - shopify-oauth
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
